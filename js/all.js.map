{"version":3,"sources":["GeoLocation.js","Scheduler.js","AppCtrl.js","ScrollDirective.js","app.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["/**\n * Handles getting location data from street address or coordinates\n **/\nexport class GeoLocation {\n    constructor($http, $q) {\n        this.$http = $http;\n        this.$q = $q;\n    }\n\n    lookupCoordinates(suggestion) {\n        if(!suggestion) {\n            return this.$q.reject();\n        }\n        return this.$http.get(`http://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/findAddressCandidates?&Address=${suggestion.text}&State=TX&f=json&City=Houston&maxLocations=10&maxResultSize=1&outFields=StreetType&magicKey=${suggestion.magicKey}&category=&location=-95.3632700,29.7632800&distance=10000&f=pjson`)\n            .then((r)=> {console.log(r);return r.data.candidates[0].location});\n    }\n\n    lookupAddress(address) {\n        //http://mycity.houstontx.gov/ArcGIS10/rest/services/addresslocators/COH_COMPOSITE_LOCATOR_WM/GeocodeServer/findAddressCandidates?&Address=1904%20Oakdale&State=TX&f=json&City=Houston&maxLocations=10&maxResultSize=1&outFields=StreetType\n        //http://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/suggest?text=oakdale&category=&location=-95.3632700,29.7632800&distance=10000&f=pjson\n        return this.$http.get(`http://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/suggest?text=${address}&category=&location=-95.3632700,29.7632800&distance=10000&f=pjson`)\n        .then((r)=> r.data.suggestions);\n    }\n}","/**\n *\n * Handles pickup schedules for Houston.\n * TODO: Abstract to more generic schedule based system (cron?) and abstract Houston data to adapter allow easy addition of more regions\n *\n * Example \"API\" calls for citymap\n trash\n http://mycity.houstontx.gov/ArcGIS10/rest/services/wm/MyCityMapData_wm/MapServer/111/query?geometryType=esriGeometryPoint&f=json&outSR=102100&outFields=DAY%2CQUAD&geometry=%7B%22x%22%3A%2D10617688%2E9548%2C%22y%22%3A3467985%2E443099998%7D&spatialRel=esriSpatialRelIntersects&returnGeometry=false\n heavy/junk\n http://mycity.houstontx.gov/ArcGIS10/rest/services/wm/MyCityMapData_wm/MapServer/112/query?geometryType=esriGeometryPoint&f=json&outSR=102100&outFields=SERVICE%5FDA%2CQUAD&geometry=%7B%22x%22%3A%2D10617688%2E9548%2C%22y%22%3A3467985%2E443099998%7D&spatialRel=esriSpatialRelIntersects&returnGeometry=false\n recycling\n http://mycity.houstontx.gov/ArcGIS10/rest/services/wm/MyCityMapData_wm/MapServer/113/query?geometryType=esriGeometryPoint&f=json&outSR=102100&outFields=SERVICE%5FDAY%2CQUAD&geometry=%7B%22x%22%3A%2D10617688%2E9548%2C%22y%22%3A3467985%2E443099998%7D&spatialRel=esriSpatialRelIntersects&returnGeometry=false\n\n **/\nexport class Scheduler {\n    constructor($http, $q, pos, numberOfDays = 60) {\n\n        this.numberOfDays = numberOfDays;\n        this.pickupDays = {};\n        //an array of moment dates that may have disrupted schedules\n        this.holidays = ['2015-11-11', '2015-11-12', '2015-11-27', '2015-11-28',\n            '2015-12-24', '2015-12-25', '2015-12-26',\n            '2015-1-1', '2015-1-2'].map((d)=>moment(d));\n\n        if (pos.coords) {\n            this.pos = {y: pos.coords.latitude, x: pos.coords.longitude, spatialReference: {\"wkid\": 4326}};\n        }\n        else if (pos.x && pos.y) {\n            this.pos = {x: pos.x, y: pos.y, spatialReference: {\"wkid\": 4326}};\n        }\n\n        var queryParams = {\n            params: {\n                geometryType: 'esriGeometryPoint',\n                f: \"json\", outSR: 102100, outFields: encodeURIComponent('DAY,QUAD,SERVICE_DA,SERVICE_DAY'),\n                geometry: JSON.stringify(this.pos),\n                spatialRel: 'esriSpatialRelIntersects', returnGeometry: false\n            }\n        };\n        var wastePromise = $http.get('http://crossorigin.me/http://mycity.houstontx.gov/ArcGIS10/rest/services/wm/MyCityMapData_wm/MapServer/111/query',\n            queryParams);\n        var junkPromise = $http.get('http://crossorigin.me/http://mycity.houstontx.gov/ArcGIS10/rest/services/wm/MyCityMapData_wm/MapServer/112/query',\n            queryParams);\n        var recyclingPromise = $http.get('http://crossorigin.me/http://mycity.houstontx.gov/ArcGIS10/rest/services/wm/MyCityMapData_wm/MapServer/113/query',\n            queryParams);\n\n        this.whenLoaded = $q.all([wastePromise, junkPromise, recyclingPromise]).then((allResults)=> {\n            var [wasteData, junkData, recyclingData] = allResults.map((_) => _.data);\n            this.configure(wasteData, junkData, recyclingData);\n        });\n    }\n\n    configure(wasteData, junkData, recyclingData) {\n        //waste is one day a week\n        var wasteDay = -1;\n        if (this.isValidData(wasteData)) {\n            wasteDay = Scheduler.getDayIndex(wasteData.features[0].attributes.DAY);\n        }\n\n        //heavy trash pickup is in the form of #rd WEEKDAY\n        var junkWeekOfMonth = -1;\n        var junkDay = -1;\n        if (this.isValidData(junkData)) {\n            var junkPattern = junkData.features[0].attributes.SERVICE_DA;\n            junkWeekOfMonth = junkPattern.substr(0, 1);\n            junkDay = Scheduler.getDayIndex(junkPattern.substr(junkPattern.indexOf(' ')));\n        }\n\n        //recycling pickup is alternating weeks\n        var recyclingDay = -1;\n        var recyclingScheduleA = false;\n        if (this.isValidData(recyclingData)) {\n            var recyclingSchedule = recyclingData.features[0].attributes.SERVICE_DAY;\n            recyclingDay = Scheduler.getDayIndex(recyclingSchedule.split('-')[0]);\n            //if true it is the \"first week\", if false it is the second week\n            recyclingScheduleA = recyclingSchedule.includes('-A');\n        }\n\n        this.pickupDays = {wasteDay, junkWeekOfMonth, junkDay, recyclingDay, recyclingScheduleA};\n        this.buildEvents(this.numberOfDays);\n        return this.events;\n    }\n\n    isValidData(data) {\n        return data && data.features && data.features.length && data.features[0].attributes;\n    }\n\n    isWasteDay(day) {\n        return day.day() == this.pickupDays.wasteDay;\n    }\n\n    //used for both trash/and junk days\n    isHeavyDay(day) {\n        var dayInMonth = day.clone().startOf('month');\n        var occurances = 0;\n        while (occurances < this.pickupDays.junkWeekOfMonth) {\n            if (dayInMonth.day() == this.pickupDays.junkDay) {\n                occurances++;\n            }\n            dayInMonth.add(1, 'days');\n        }\n        //offset the last day added (ew)\n        dayInMonth.add(-1, 'days');\n        return dayInMonth.isSame(day, 'day');\n    }\n\n    isTreeDay(day) {\n        return !this.isEvenMonth(day) && this.isHeavyDay(day);\n    }\n\n    isJunkDay(day) {\n        return this.isEvenMonth(day) && this.isHeavyDay(day);\n    }\n\n    isEvenMonth(day) {\n        return (day.month() + 1) % 2 == 0;\n    }\n\n    isRecyclingDay(day) {\n        //recycling schedule A occurs every other week (starting at second week)\n        var isEvenWeek = day.weeks() % 2 == 0;\n        var isThisWeek = (this.pickupDays.recyclingScheduleA && isEvenWeek) || (!this.pickupDays.recyclingScheduleA && !isEvenWeek);\n        return isThisWeek && day.day() == this.pickupDays.recyclingDay;\n    }\n\n    isPossibleHoliday(day) {\n        return _.some(this.holidays, (d) => d.isSame(day, 'day'))\n    }\n\n    getCategoriesForDay(day) {\n        var eventsForDay = {\n            waste: this.isWasteDay(day),\n            junk: this.isJunkDay(day),\n            tree: this.isTreeDay(day),\n            recycling: this.isRecyclingDay(day)\n        };\n        //group filter out empty days\n        return _.pairs(eventsForDay).filter((category)=>category[1]).map((category)=>category[0]);\n    }\n\n    buildEvents(numberOfDays) {\n        var day = moment().startOf('day');\n        var groupEvents = (day)=> {\n            return {\n                day: day, categories: this.getCategoriesForDay(day), possibleHoliday: this.isPossibleHoliday(day)\n            }\n        };\n        this.events = _.range(0, numberOfDays).map((i)=>day.clone().add(i, 'days')).map(groupEvents)\n            .filter((event) =>event.categories.length);\n\n    }\n\n    static getDayIndex(dayStr) {\n        return moment(dayStr, \"dddd\").day()\n    }\n\n    static service($http, $q) {\n        return (pos, numberOfDays) => new Scheduler($http, $q, pos, numberOfDays)\n    }\n}","export class AppCtrl {\n    constructor($scope, SchedulerService, $q, GeoLocation) {\n        this.$q = $q;\n        this.loadingSchedule = false;\n        this.schedulerService = SchedulerService;\n        this.geoLocation = GeoLocation;\n    }\n\n    queryAddress(address) {\n        if(address == \"\") {\n            this.events = null; //clear out data\n        }\n        if (address.split([' ']).length == 1) {\n            return this.$q.when([]);\n        }\n\n        return this.geoLocation.lookupAddress(address).then((r)=> {\n            return r;\n        });\n    }\n\n    getCategorySchedule(category) {\n        var schedule = \"unknown\";\n        if(category == 'junk') {\n            schedule = moment().date(this.pickupDays.junkWeekOfMonth).format(\"Do\") + \" (Even Months)\";\n        }\n        else if(category == 'tree') {\n            schedule = moment().date(this.pickupDays.junkWeekOfMonth).format(\"Do\") + \" (Odd Months)\";\n        }\n        else if(category == 'waste') {\n           schedule = \"Every \" + AppCtrl.dayOfWeek(this.pickupDays.wasteDay);\n        }\n        else if(category == 'recycling') {\n            schedule = \"Every Other \" + AppCtrl.dayOfWeek(this.pickupDays.recyclingDay);\n        }\n        return schedule;\n    }\n\n    getCategoryImage(category) {\n        return \"url(\\\"img/\" + category + \"-gray.png\\\")\";\n    }\n\n\n    selectAddress(suggestion) {\n        if(!suggestion) {\n            this.events = null;\n            this.searchText = null;\n            return;\n        }\n        this.address = suggestion;\n        console.log('address selected', suggestion);\n        this.loadingSchedule = true;\n        this.geoLocation.lookupCoordinates(suggestion).then((coords) => {\n            console.log('got coordinates', coords);\n            var scheduler = this.schedulerService(coords, 60);\n            scheduler.whenLoaded.then(()=> {\n                this.pickupDays = scheduler.pickupDays;\n                this.loadingSchedule = false;\n                this.events = scheduler.events\n            });\n        });\n\n    }\n\n    niceCategoryName(category) {\n        if(category == 'waste') {\n            return \"Trash & Yard\";\n        }\n        else {\n            return category.charAt(0).toUpperCase() + category.slice(1);\n        }\n    }\n\n    static dateFilter(day) {\n        if (moment().isSame(day, 'day')) {\n            return 'Today ' + day.format('MMM Do');\n        } else if (moment().add(1, 'days').isSame(day, 'day')) {\n            return 'Tomorrow ' + day.format('MMM Do');\n        } else {\n            return day.format('dddd MMM Do');\n        }\n    }\n\n    static dayOfWeek(day) {\n        return moment().day(day).format(\"dddd\");\n    }\n}",null,"import {AppCtrl} from 'AppCtrl';\nimport {Scheduler} from 'Scheduler';\nimport {GeoLocation} from 'GeoLocation';\n\nangular.module('StarterApp', ['ngMaterial']).config(function ($mdThemingProvider) {\n    $mdThemingProvider.definePalette('rollout', {\n        \"50\": \"#ebf8f0\",\n        \"100\": \"#c4ebd2\",\n        \"200\": \"#9dddb4\",\n        \"300\": \"#7cd29a\",\n        \"400\": \"#5cc681\",\n        \"500\": \"#3bbb68\",\n        \"600\": \"#34a45b\",\n        \"700\": \"#2c8c4e\",\n        \"800\": \"#257541\",\n        \"900\": \"#1e5e34\",\n        \"A100\": \"#c4ebd2\",\n        \"A200\": \"#9dddb4\",\n        \"A400\": \"#5cc681\",\n        \"A700\": \"#2c8c4e\"\n    });\n    $mdThemingProvider.theme('default')\n        .primaryPalette('rollout');\n}).controller(\"AppCtrl\", AppCtrl)\n    .service(\"SchedulerService\", Scheduler.service)\n    .service(\"GeoLocation\", GeoLocation)\n    .filter('date', () => AppCtrl.dateFilter)\n    .filter('dayOfWeek', () => AppCtrl.dayOfWeek);\n"],"sourceRoot":"/source/"}